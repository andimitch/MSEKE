import React, { useState } from "react";
import { Group } from "@visx/group";
import { hierarchy, Tree } from "@visx/hierarchy";
import { LinearGradient } from "@visx/gradient";
import { LinkVertical } from "@visx/shape";
import useForceUpdate from "./useForceUpdate";
import { data } from "./data";
import { CleanPlugin } from "webpack";
import "../css/main";


const defaultMargin = { top: 30, left: 30, right: 30, bottom: 70 };

export type LinkTypesProps = {
  width: number;
  height: number;
  margin?: { top: number; right: number; bottom: number; left: number };
};


export default function Content({
  width: totalWidth,
  height: totalHeight,
  margin = defaultMargin
}: LinkTypesProps) {
  const forceUpdate = useForceUpdate();

  const innerWidth = totalWidth - margin.left - margin.right;
  const innerHeight = totalHeight - margin.top - margin.bottom;

  let origin: { x: number; y: number };
  let sizeWidth: number;
  let sizeHeight: number;


  origin = { x: 0, y: 0 };
  sizeWidth = innerWidth;
  sizeHeight = innerHeight;
  
  let LinkComponent: React.ComponentType<any>;
  LinkComponent = LinkVertical;

  return (
    <div>

      <svg width={totalWidth} height={totalHeight}>
        
        <rect width={totalWidth} height={totalHeight} rx={0} fill="#FFFFFF" />
        <Group top={margin.top} left={margin.left}>
          <Tree
            root={hierarchy(data, (d) => (d.isExpanded ? null : d.children))}
            size={[sizeWidth, sizeHeight]}
            separation={(a, b) => (a.parent === b.parent ? 1 : 0.5) / a.depth}
          >
            {(tree) => (
              <Group top={origin.y} left={origin.x}>
                {tree.links().map((link, i) => (
                  <LinkComponent
                    key={i}
                    data={link}
                    stroke="#141414"
                    strokeWidth="1"
                    fill="none"
                  />
                ))}

                {tree.descendants().map((node, key) => {
                  const width = 100;
                  const height = 40;
                  const [t, setT] = useState("");

                  let top: number;
                  let left: number;
          
                  top = node.y;
                  left = node.x;
                 

                  return (
                    <Group top={top} left={left} key={key}>   
                      <foreignObject x={-width/2} y={-height/2} width="100" height="100">
                        <div style={{background: "#FA2134",
                            width: "10px",
                            height: "10px",
                            borderRadius: "0 10px 0 0",
                            float: "right"}}
                            >
                          
                        </div>
                        <div style={{background: "#333333",
                            fontSize: "12px",
                            padding: "13px 5px 13px 5px", 
                            color: "#FFFFFF",
                            fontFamily: "Arial",
                            borderRadius: "10px",
                            textAlign: "center",
                            margin: "0px"}}
                            onClick = {() => {
                              setT("old")
                            }}
                            >
                            {node.data.name}
                            {node.depth}
                            {t}
                        </div>
                      </foreignObject>       
                    </Group>
                  );
                })}
              </Group>
            )}
          </Tree>
        </Group>
      </svg>
    </div>
  );
}



MAIN _______________


import Header from "./header";
import Content from "./Content";
import React, { useState } from "react";
import "../css/main";
import { SizeMe } from 'react-sizeme';

//import "./split.ts"; // this breaks the code somehow :-/


export default class Main extends React.Component {
    render () {
        return (
            
            <div>
                <Header />
                <div className="container">
                    <div className="container__left">
                        <SizeMe>{({ size }) => 
                            <div style={{width:"100%"}}>
                                My width is {Math.round(size.width)}px. 
                                My height is {Math.round(size.height)} hello
                            </div>}
                        </SizeMe>
                    </div>
                    <div className="resizer" id="dragMe">
                        <SizeMe>{({ size }) => <div>My width is {Math.round(size.width)}px</div>}</SizeMe>
                    </div>
                    <div className="container__right">
                        <SizeMe>{({ size }) => 
                        <div style={{width:"100%"}}>My width is {Math.round(size.width)}px hello
                        </div>}
                        </SizeMe>
                    </div>
                </div>
            </div>
        );
    }
}



_______________________

    return (
    <div>
        <h1>test {props.w}</h1>
        <svg width={props.w} height={100}>
          <rect width={props.w} height={100} fill="#E5E5E5">
            
          </rect>
        </svg>
    </div>
  
    )