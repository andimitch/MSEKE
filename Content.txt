import React, { useState } from "react";
import { Group } from "@visx/group";
import { hierarchy, Tree } from "@visx/hierarchy";
import { LinearGradient } from "@visx/gradient";
import { LinkVertical } from "@visx/shape";
import useForceUpdate from "./useForceUpdate";
import { data } from "./data";
import { CleanPlugin } from "webpack";
import "../css/main";


export default class Content extends React.Component {

  render() {
    const totalHeight = 700;
    const totalWidth = 700;
    const margin = { top: 30, left: 30, right: 30, bottom: 70 };

    const innerWidth = totalWidth - margin.left - margin.right;
    const innerHeight = totalHeight - margin.top - margin.bottom;

    let origin: { x: number; y: number };
    let sizeWidth: number;
    let sizeHeight: number;


    origin = { x: 0, y: 0 };
    sizeWidth = innerWidth;
    sizeHeight = innerHeight;

   
    
    return (

        <div>

        <svg width={totalWidth} height={totalHeight}>
            
            <rect width={totalWidth} height={totalHeight} rx={0} fill="#FFFFFF" />
            <Group top={margin.top} left={margin.left}>
            <Tree
                root={hierarchy(data, (d) => (d.isExpanded ? null : d.children))}
                size={[sizeWidth, sizeHeight]}
                separation={(a, b) => (a.parent === b.parent ? 1 : 0.5) / a.depth}
            >
                {(tree) => (
                <Group top={origin.y} left={origin.x}>
                    {tree.links().map((link, i) => (
                    <LinkVertical
                        key={i}
                        data={link}
                        stroke="#141414"
                        strokeWidth="1"
                        fill="none"
                    />
                    ))}

                    {tree.descendants().map((node, key) => {
                    const width = 100;
                    const height = 40;
                    const [t, setT] = useState("");

                    let top = node.y;
                    let left = node.x;
                    

                    return (
                        <Group top={top} left={left} key={key}>   
                        <foreignObject x={-width/2} y={-height/2} width="100" height="100">
                            <div style={{background: "#FA2134",
                                width: "10px",
                                height: "10px",
                                borderRadius: "0 10px 0 0",
                                float: "right"}}
                                >
                            
                            </div>
                            <div style={{background: "#2a9d8f",
                                fontSize: "12px",
                                padding: "13px 5px 13px 5px", 
                                color: "#FFFFFF",
                                fontFamily: "Arial",
                                borderRadius: "10px",
                                textAlign: "center",
                                margin: "0px"}}
                                onClick = {() => {
                                setT("new")
                                }}
                                >
                                {node.data.name}
                                {node.depth}
                                {t}
                          
                                
                            </div>
                        </foreignObject>       
                        </Group>
                    );
                    })}
                </Group>
                )}
            </Tree>
            </Group>
        </svg>
        </div>
    );
  }
}


